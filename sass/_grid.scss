@import "mixins";

//variables
$total-cols: 12;

//functions
@function col-width($col, $total-cols) {
  @return percentage($col / $total-cols);
}

.grid {
  width: 100%;
  padding: 0;
  display: block;

  &.wide {
    max-width: 1200px;
    margin: 0 auto;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -4px;
    margin-right: -4px;

    &.no-gutters {
      margin-left: 0;
      margin-right: 0;
    }

    &.no-gutters .col {
      padding-left: 0;
      padding-right: 0;
    }
  }

  .col {
    padding-left: 4px;
    padding-right: 4px;
  }

  //c-0, m-0, l-0
  .c-0,
  .m-0,
  .l-0 {
    display: none;
  }

  //column width
  @for $i from 1 through $total-cols {
    $value: col-width($i, $total-cols);

    //c-1 => c-12: for mobile
    .c-#{$i} {
      display: block;
      flex: 0 0 $value;
      max-width: $value;
    }

    //column offset c-o-1 => c-o-11
    @if $i <= 11 {
      .c-o-#{$i} {
        margin-left: $value;
      }
    }
  }

  @include responsive_mi740 {
    .row {
      margin-left: -8px;
      margin-right: -8px;
    }
    .col {
      padding-left: 8px;
      padding-right: 8px;
    }

    //column width
    @for $i from 1 through $total-cols {
      $value: col-width($i, $total-cols);

      //m-1 => m-12: for tablet
      .m-#{$i} {
        display: block;
        flex: 0 0 $value;
        max-width: $value;
      }

      //column offset m-o-1 => m-o-11
      @if $i <= 11 {
        .m-o-#{$i} {
          margin-left: $value;
        }
      }
    }
  }

  @include responsive_mi113 {
    .row {
      margin-left: -12px;
      margin-right: -12px;
    }
    .col {
      padding-left: 12px;
      padding-right: 12px;
    }

    .row.sm-gutter {
      margin-left: -5px;
      margin-right: -5px;

      .col {
        padding-left: 5px;
        padding-right: 5px;
      }
    }

    //column width
    @for $i from 1 through $total-cols {
      $value: col-width($i, $total-cols);

      //l-1 => l-12: for PC
      .l-#{$i} {
        display: block;
        flex: 0 0 $value;
        max-width: $value;
      }

      //column offset m-o-1 => m-o-11
      @if $i <= 11 {
        .l-o-#{$i} {
          margin-left: $value;
        }
      }
    }
  }

  @include responsive_mi740_ma1023 {
    &.wide {
      width: 644px;
    }
  }

  @include responsive_mi1024_ma1239 {
    &.wide {
      width: 984px;

      .row {
        margin-left: -12px;
        margin-right: -12px;
      }
      .col {
        padding-left: 12px;
        padding-right: 12px;
      }

      .row.sm-gutter {
        margin-left: -5px;
        margin-right: -5px;

        .col {
          padding-left: 5px;
          padding-right: 5px;
        }
      }

      //column width
      @for $i from 1 through $total-cols {
        $value: col-width($i, $total-cols);

        //l-1 => l-12: for PC
        .l-#{$i} {
          display: block;
          flex: 0 0 $value;
          max-width: $value;
        }

        //column offset m-o-1 => m-o-11
        @if $i <= 11 {
          .l-o-#{$i} {
            margin-left: $value;
          }
        }
      }
    }
  }
}
